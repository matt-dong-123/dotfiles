set -g prefix C-a
unbind C-b
bind C-a send-prefix

setw -g mode-keys vi
unbind -T copy-mode-vi v
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

set -g renumber-windows on
set -g base-index 1
set -g pane-base-index 1

set -g mouse on

set -g history-limit 100000

set -g set-titles on
set -g set-titles-string "#{pane_title}"

vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +${vim_pattern}$'"
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R

bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind C-l send-keys 'C-l'

bind K run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '❯ ' \
    --preview 'sesh preview {}' \
    --layout reverse --style full \
    --color 'border:blue,label:blue' \
    --color 'preview-border:magenta,preview-label:magenta' \
    --color 'list-border:green,list-label:green' \
    --color 'input-border:red,input-label:red' \
    --color 'info:bright-black,prompt:red,pointer:green' \
    --color 'marker:green,spinner:green,header:green' \
    --header '^a(ll) ^t(mux) ^g configs ^x zoxide ^d kill ^f(ind)' \
    --bind 'ctrl-a:reload(sesh list --icons)' \
    --bind 'ctrl-t:reload(sesh list -t --icons)' \
    --bind 'ctrl-g:reload(sesh list -c --icons)' \
    --bind 'ctrl-x:reload(sesh list -z --icons)' \
    --bind 'ctrl-f:reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+reload(sesh list --icons)' \
)\""


bind c new-window -c "#{pane_current_path}"
bind x kill-pane
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

bind R source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

bind Enter resize-pane -Z
bind y copy-mode
bind r command-prompt "rename-session '%%'"

set -s focus-events on
set -s extended-keys on
set -s escape-time 0

set -g status-left-length 100
set -g status-justify absolute-centre
set -g status-position top

set -g allow-passthrough on

set -g default-terminal "${TERM}"
set -sg terminal-overrides ",*:RGB"

set -g status-style bg=default
set -g pane-border-style fg=black,bright
set -g pane-active-border-style fg=blue
set -g pane-border-lines double

set -g status-left "#{?client_prefix,#[fg=red]󰠠 ,#[fg=yellow] }#S"
set -g status-right ""
set -g window-status-separator " • "

set -g window-status-format "\
#[fg=blue] #I #W \
#{?window_zoomed_flag,#[fg=cyan]󰊓 ,}\
#{?window_last_flag,#[fg=cyan] ,}\
#{?window_marked_flag,#[fg=cyan] ,}"

set -g window-status-current-format "#[bg=blue, fg=black] #I #W \
#{?window_zoomed_flag,#[fg=black]󰊓 ,}\
#{?window_marked_flag,#[fg=black] ,}"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'tmux-plugins/tmux-resurrect'

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "display-message 'Installing...' \; run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"
run '~/.config/tmux/plugins/tpm/tpm'
